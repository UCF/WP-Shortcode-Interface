{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","required","data","param","prototype","isValid","getValue","val","getOutput","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","DateField","ColorField","CheckboxField","is","FieldSet","command","$container","jQuery","fields","Array","find","each","idx","obj","push","createField","tagName","prop","attr","getFields","getValues","forEach","field","console","log","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","selectedShortcode","$activeShortcodeEditor","$activeShortcodeDescription","$activeFields","click","e","resetForm","onSubmitBtnClick","change","onSelectChanged","editor","tinyMCE","activeEditor","trigger","i","validateForm","errors","name","addClass","removeClass","parseShortcode","getFormValues","insertShortcode","params","allowsContent","undefined","value","hasClass","String","text","buildShortcode","send_to_editor","enclosingText","selection","getContent","key","preventDefault","$activeShortcodeElems","filter","initPreview","shortcode","window","frames","append","getJSON","ajaxurl","action","ifrm","document","getElementById","contentWindow","contentDocument","open","write","markup","close","ready"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n        }\n\n        public isValid(): boolean {\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                return false;\n            }\n            return true;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        constructor($field: any) {\n            super($field)\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(this.createField(obj));\n            });\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public getValues() {\n            this.fields.forEach( (field) => {\n                console.log(field.param + '=' + field.getValue());\n            });\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public selectedShortcode: string;\n        public $activeShortcodeEditor: any;\n        public $activeShortcodeDescription: any;\n        public $activeFields: any;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.selectedShortcode = null;\n            this.$activeShortcodeEditor = null;\n            this.$activeShortcodeDescription = null;\n            this.$activeFields = null;\n\n            this.$toggle.click( (e) => { this.resetForm() } );\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        resetForm() {\n            this.editor = tinyMCE.activeEditor ? tinyMCE.activeEditor : null;\n            this.$select.val('').trigger('change');\n            if (this.$activeFields) {\n                this.$activeFields.prop('checked', false);\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field);\n                    if ( $field.prop['type'] !== 'checkbox' ) {\n                        $field.val('');\n                    }\n                });\n            }\n        }\n\n        validateForm() : boolean {\n            var errors = 0;\n\n            if (this.$activeFields) {\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field),\n                        name = $field.data('scif-param'),\n                        required = $field.data('scif-required');\n\n                    if ( required && ( $field.val() === '' ) ) {\n                        jQuery( '.' + name + '-error' ).addClass('active');\n                        errors++;\n                    } else {\n                        jQuery( '.' + name + '-error' ).removeClass('active');\n                    }\n                } );\n            }\n            else {\n                errors++;\n            }\n\n            if ( errors ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        parseShortcode() {\n            var data = this.getFormValues();\n            this.insertShortcode(data);\n        }\n\n        getFormValues() {\n            var data = {\n                command: this.selectedShortcode,\n                params: {},\n                allowsContent: this.$activeShortcodeEditor.data('scif-allows-content') !== undefined\n            };\n\n            this.$activeFields.each( (i, field) => {\n                var $field = jQuery(field),\n                    param  = $field.data('scif-param'),\n                    value  = '';\n\n                switch( $field.prop('tagName') ) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                    case 'SELECT':\n                        if ($field.prop('type') === 'checkbox') {\n                            if ( $field.hasClass( 'checkbox-list-item' ) ) {\n                                if ( $field.prop('checked') ) {\n                                    value = $field.val();\n                                } else {\n                                    break;\n                                }\n                            } else {\n                                value = String($field.prop('checked'));\n                            }\n                        } else {\n                            value = $field.val();\n                        }\n                        break;\n                    default:\n                        value = $field.val();\n                }\n\n                if (value) {\n                    if (typeof data.params[param] !== 'undefined') {\n                        data.params[param] += ',' + value;\n                    } else {\n                        data.params[param] = value;\n                    }\n                }\n            });\n\n            return data;\n        }\n\n        insertShortcode(data) {\n            var text = this.buildShortcode(data);\n            send_to_editor( text );\n        }\n\n        buildShortcode(data) {\n            var enclosingText = null;\n\n            if ( this.editor ) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = '[' + data.command;\n\n            if (data.params) {\n                for (var key in data.params) {\n                    text += ' ' + key + '=\"' + data.params[key] + '\"';\n                }\n            }\n\n            text += ']';\n\n            if ( enclosingText ) {\n                text += enclosingText;\n            }\n            if ( data.allowsContent ) {\n                text += '[/' + data.command + ']';\n            }\n\n            return text;\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.validateForm() ) {\n                this.parseShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            this.selectedShortcode = this.$select.val();\n\n            if (this.$activeShortcodeEditor) {\n                this.$activeShortcodeEditor.removeClass('active');\n            }\n            if (this.$activeShortcodeDescription) {\n                this.$activeShortcodeDescription.removeClass('active');\n            }\n\n            // $activeShortcodeElems references both the shortcode editor and\n            // the shortcode description\n            var $activeShortcodeElems = this.$interface.find('.shortcode-' + this.selectedShortcode).addClass('active');\n            this.$activeShortcodeEditor = $activeShortcodeElems.filter('.shortcode-editor');\n            this.$activeShortcodeDescription = $activeShortcodeElems.filter('.shortcode-desc');\n            this.$activeFields = this.$activeShortcodeEditor.find('.wp-scif-field');\n\n            this.initPreview();\n        }\n\n        initPreview() {\n            var data = this.getFormValues();\n\n            if (data.command) {\n                var shortcode = this.buildShortcode(data);\n                // var stylesheet = jQuery('#' + this.selectedShortcode + '-preview').data('styles');\n                // var link  = jQuery('link').attr('href', stylesheet);\n                jQuery('head', window.frames[this.selectedShortcode + '-preview']).append('Hello world');\n                jQuery.getJSON(ajaxurl, {\n                    action: 'render_shortcode',\n                    shortcode: shortcode\n                }, (data) => {\n                    var ifrm = <any>document.getElementById(this.selectedShortcode + '-preview');\n                    \n                    ifrm = ifrm.contentWindow || ifrm.contentDocument.document || ifrm.contentDocument;\n                    ifrm.document.open();\n                    ifrm.document.write(data.markup);\n                    ifrm.document.close();\n                });\n            }\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}