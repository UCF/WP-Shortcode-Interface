{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","required","data","param","prototype","is_valid","get_value","val","get_output","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","DateField","FieldSet","command","$container","jQuery","fields","Array","find","each","idx","obj","push","createField","tagName","prop","attr","getFields","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","selectedShortcode","$activeShortcodeEditor","$activeShortcodeDescription","$activeFields","click","e","resetForm","onSubmitBtnClick","change","onSelectChanged","editor","tinyMCE","activeEditor","trigger","i","field","validateForm","errors","name","addClass","removeClass","parseShortcode","getFormValues","insertShortcode","params","allowsContent","undefined","value","hasClass","String","text","buildShortcode","send_to_editor","enclosingText","selection","getContent","key","preventDefault","$activeShortcodeElems","filter","initPreview","shortcode","window","frames","append","getJSON","ajaxurl","action","ifrm","document","getElementById","contentWindow","contentDocument","open","write","markup","close","ready"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n        }\n\n        public is_valid(): boolean {\n            // If required, it must have value\n            if (this.required && ! this.get_value()) {\n                return false;\n            }\n            return true;\n        }\n\n        public get_value() {\n            return this.$field.val();\n        }\n\n        public get_output() {\n            return this.param + '=\"' + this.get_value() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public is_valid() : boolean {\n            var valid = super.is_valid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.get_value());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        constructor($field: any) {\n            super($field)\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(new Fields.TextField($field));\n            });\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public selectedShortcode: string;\n        public $activeShortcodeEditor: any;\n        public $activeShortcodeDescription: any;\n        public $activeFields: any;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.selectedShortcode = null;\n            this.$activeShortcodeEditor = null;\n            this.$activeShortcodeDescription = null;\n            this.$activeFields = null;\n\n            this.$toggle.click( (e) => { this.resetForm() } );\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        resetForm() {\n            this.editor = tinyMCE.activeEditor ? tinyMCE.activeEditor : null;\n            this.$select.val('').trigger('change');\n            if (this.$activeFields) {\n                this.$activeFields.prop('checked', false);\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field);\n                    if ( $field.prop['type'] !== 'checkbox' ) {\n                        $field.val('');\n                    }\n                });\n            }\n        }\n\n        validateForm() : boolean {\n            var errors = 0;\n\n            if (this.$activeFields) {\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field),\n                        name = $field.data('scif-param'),\n                        required = $field.data('scif-required');\n\n                    if ( required && ( $field.val() === '' ) ) {\n                        jQuery( '.' + name + '-error' ).addClass('active');\n                        errors++;\n                    } else {\n                        jQuery( '.' + name + '-error' ).removeClass('active');\n                    }\n                } );\n            }\n            else {\n                errors++;\n            }\n\n            if ( errors ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        parseShortcode() {\n            var data = this.getFormValues();\n            this.insertShortcode(data);\n        }\n\n        getFormValues() {\n            var data = {\n                command: this.selectedShortcode,\n                params: {},\n                allowsContent: this.$activeShortcodeEditor.data('scif-allows-content') !== undefined\n            };\n\n            this.$activeFields.each( (i, field) => {\n                var $field = jQuery(field),\n                    param  = $field.data('scif-param'),\n                    value  = '';\n\n                switch( $field.prop('tagName') ) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                    case 'SELECT':\n                        if ($field.prop('type') === 'checkbox') {\n                            if ( $field.hasClass( 'checkbox-list-item' ) ) {\n                                if ( $field.prop('checked') ) {\n                                    value = $field.val();\n                                } else {\n                                    break;\n                                }\n                            } else {\n                                value = String($field.prop('checked'));\n                            }\n                        } else {\n                            value = $field.val();\n                        }\n                        break;\n                    default:\n                        value = $field.val();\n                }\n\n                if (value) {\n                    if (typeof data.params[param] !== 'undefined') {\n                        data.params[param] += ',' + value;\n                    } else {\n                        data.params[param] = value;\n                    }\n                }\n            });\n\n            return data;\n        }\n\n        insertShortcode(data) {\n            var text = this.buildShortcode(data);\n            send_to_editor( text );\n        }\n\n        buildShortcode(data) {\n            var enclosingText = null;\n\n            if ( this.editor ) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = '[' + data.command;\n\n            if (data.params) {\n                for (var key in data.params) {\n                    text += ' ' + key + '=\"' + data.params[key] + '\"';\n                }\n            }\n\n            text += ']';\n\n            if ( enclosingText ) {\n                text += enclosingText;\n            }\n            if ( data.allowsContent ) {\n                text += '[/' + data.command + ']';\n            }\n\n            return text;\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.validateForm() ) {\n                this.parseShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            this.selectedShortcode = this.$select.val();\n\n            if (this.$activeShortcodeEditor) {\n                this.$activeShortcodeEditor.removeClass('active');\n            }\n            if (this.$activeShortcodeDescription) {\n                this.$activeShortcodeDescription.removeClass('active');\n            }\n\n            // $activeShortcodeElems references both the shortcode editor and\n            // the shortcode description\n            var $activeShortcodeElems = this.$interface.find('.shortcode-' + this.selectedShortcode).addClass('active');\n            this.$activeShortcodeEditor = $activeShortcodeElems.filter('.shortcode-editor');\n            this.$activeShortcodeDescription = $activeShortcodeElems.filter('.shortcode-desc');\n            this.$activeFields = this.$activeShortcodeEditor.find('.wp-scif-field');\n\n            this.initPreview();\n        }\n\n        initPreview() {\n            var data = this.getFormValues();\n\n            if (data.command) {\n                var shortcode = this.buildShortcode(data);\n                // var stylesheet = jQuery('#' + this.selectedShortcode + '-preview').data('styles');\n                // var link  = jQuery('link').attr('href', stylesheet);\n                jQuery('head', window.frames[this.selectedShortcode + '-preview']).append('Hello world');\n                jQuery.getJSON(ajaxurl, {\n                    action: 'render_shortcode',\n                    shortcode: shortcode\n                }, (data) => {\n                    var ifrm = <any>document.getElementById(this.selectedShortcode + '-preview');\n                    \n                    ifrm = ifrm.contentWindow || ifrm.contentDocument.document || ifrm.contentDocument;\n                    ifrm.document.open();\n                    ifrm.document.write(data.markup);\n                    ifrm.document.close();\n                });\n            }\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}