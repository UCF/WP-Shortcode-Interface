{"version":3,"sources":["wp-scif.ts"],"names":["WPSCIF","ShortcodeInterface","_this","this","$toggle","jQuery","$submitBtn","$select","selectedShortcode","$fields","click","e","resetForm","onSubmitBtnClick","change","onSelectChanged","prototype","editor","tinyMCE","activeEditor","val","trigger","prop","each","i","field","$field","validateForm","errors","name","data","addClass","removeClass","parseShortcode","getFormValues","insertShortcode","command","params","param","value","hasClass","String","text","buildShortcode","send_to_editor","enclosingText","selection","getContent","key","preventDefault","shortcode","find","length","initPreview","getJSON","ajaxurl","action","ifrm","document","getElementById","contentWindow","contentDocument","open","write","markup","close","ready"],"mappings":"AAIA,GAAUA,SAAV,SAAUA,GACN,GAAAC,GAAA,WAQI,QAAAA,KAAA,GAAAC,GAAAC,IACIA,MAAKC,QAAUC,OAAO,kBACtBF,KAAKG,WAAaD,OAAO,mBACzBF,KAAKI,QAAUF,OAAO,mBACtBF,KAAKK,kBAAoB,KACzBL,KAAKM,QAAUJ,OAAO,kBAEtBF,KAAKC,QAAQM,MAAO,SAACC,GAAQT,EAAKU,cAClCT,KAAKG,WAAWI,MAAO,SAACC,GAAQT,EAAKW,iBAAiBF,KACtDR,KAAKI,QAAQO,OAAQ,SAACH,GAAQT,EAAKa,gBAAgBJ,KA4J3D,MAzJIV,GAAAe,UAAAJ,UAAA,WACIT,KAAKc,OAASC,QAAQC,aAAeD,QAAQC,aAAe,KAC5DhB,KAAKI,QAAQa,IAAI,IAAIC,QAAQ,UAC7BlB,KAAKM,QAAQa,KAAK,WAAW,GAC7BnB,KAAKM,QAAQc,KAAM,SAACC,EAAGC,GACnB,GAAIC,GAASrB,OAAOoB,EACS,cAAxBC,EAAOJ,KAAW,MACnBI,EAAON,IAAI,OAKvBnB,EAAAe,UAAAW,aAAA,WACI,GAAIC,GAAS,CAcb,OAbAzB,MAAKM,QAAQc,KAAM,SAACC,EAAGC,GACnB,GAAIC,GAASrB,OAAOoB,GAChBI,EAAOH,EAAOI,KAAK,aACRJ,GAAOI,KAAK,kBAES,KAAjBJ,EAAON,OACtBf,OAAQ,IAAMwB,EAAO,UAAWE,SAAS,UACzCH,KAEAvB,OAAQ,IAAMwB,EAAO,UAAWG,YAAY,aAI/CJ,GAOT3B,EAAAe,UAAAiB,eAAA,WACI,GAAIH,GAAO3B,KAAK+B,eAChB/B,MAAKgC,gBAAgBL,IAGzB7B,EAAAe,UAAAkB,cAAA,WACI,GAAIJ,IACAM,QAASjC,KAAKK,kBACd6B,UAuCJ,OApCAlC,MAAKM,QAAQc,KAAM,SAACC,EAAGC,GACnB,GAAIC,GAASrB,OAAOoB,GAChBa,EAASZ,EAAOI,KAAK,cACrBS,EAAS,EAEb,QAAQb,EAAOJ,KAAK,YAChB,IAAK,QACL,IAAK,WACL,IAAK,SACD,GAA4B,aAAxBI,EAAOJ,KAAK,QACZ,GAAKI,EAAOc,SAAU,sBAAyB,CAC3C,IAAKd,EAAOJ,KAAK,WAGb,KAFAiB,GAAQb,EAAON,UAKnBmB,GAAQE,OAAOf,EAAOJ,KAAK,gBAG/BiB,GAAQb,EAAON,KAEnB,MACJ,SACImB,EAAQb,EAAON,MAGnBmB,QACkC,KAAvBT,EAAKO,OAAOC,GACnBR,EAAKO,OAAOC,IAAU,IAAMC,EAE5BT,EAAKO,OAAOC,GAASC,KAK1BT,GAGX7B,EAAAe,UAAAmB,gBAAA,SAAgBL,GACZ,GAAIY,GAAOvC,KAAKwC,eAAeb,EAC/Bc,gBAAgBF,IAGpBzC,EAAAe,UAAA2B,eAAA,SAAeb,GACX,GAAIe,GAAgB,IAEf1C,MAAKc,SACN4B,EAAgB1C,KAAKc,OAAO6B,UAAUC,aAG1C,IAAIL,GAAO,IAAMZ,EAAKM,OAEtB,IAAIN,EAAKO,OACL,IAAK,GAAIW,KAAOlB,GAAKO,OACjBK,GAAQ,IAAMM,EAAM,KAAOlB,EAAKO,OAAOW,GAAO,GAUtD,OANAN,IAAQ,IAEHG,IACDH,GAAQG,EAAgB,KAAOf,EAAKM,QAAU,KAG3CM,GAGXzC,EAAAe,UAAAH,iBAAA,SAAiBF,GACbA,EAAEsC,gBACF,IAAIC,GAAY/C,KAAKI,QAAQa,KAEff,QAAO,cAAgB6C,GAAWC,KAAK,iBAEhDhD,MAAKwB,gBACNxB,KAAK8B,kBAIbhC,EAAAe,UAAAD,gBAAA,SAAgBJ,GACZR,KAAKK,kBAAoBL,KAAKI,QAAQa,MAEC,IAAlCjB,KAAKK,kBAAkB4C,QACxB/C,OAAO,+BAA+B2B,YAAY,UAGtD3B,OAAO,cAAgBF,KAAKK,mBAAmBuB,SAAS,UACxD5B,KAAKkD,eAGTpD,EAAAe,UAAAqC,YAAA,WAAA,GAAAnD,GAAAC,KACQ2B,EAAO3B,KAAK+B,eAEhB,IAAIJ,EAAKM,QAAQ,CACb,GAAIc,GAAY/C,KAAKwC,eAAeb,EAEpCzB,QAAOiD,QAAQC,SACXC,OAAQ,mBACRN,UAAWA,GACZ,SAACpB,GACA,GAAI2B,GAAYC,SAASC,eAAezD,EAAKM,kBAAoB,WACjEiD,GAAOA,EAAKG,eAAiBH,EAAKI,gBAAgBH,UAAYD,EAAKI,gBACnEJ,EAAKC,SAASI,OACdL,EAAKC,SAASK,MAAMjC,EAAKkC,QACzBP,EAAKC,SAASO,YAI9BhE,IA7KaD,GAAAC,mBAAkBA,GADzBD,SAAAA,YAiLa,mBAAXK,SACRA,OAAOqD,UAAUQ,MAAO,WACpB,GAAIlE,QAAOC","file":"wp-scif.min.js","sourcesContent":["declare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $submitBtn: any;\n        public $select: any;\n        public selectedShortcode: string;\n        public $fields: any;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$submitBtn = jQuery('#wp-scif-submit');\n            this.$select = jQuery('#wp-scif-select');\n            this.selectedShortcode = null;\n            this.$fields = jQuery('.wp-scif-field');\n\n            this.$toggle.click( (e) => { this.resetForm() } );\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        resetForm() {\n            this.editor = tinyMCE.activeEditor ? tinyMCE.activeEditor : null;\n            this.$select.val('').trigger('change');\n            this.$fields.prop('checked', false);\n            this.$fields.each( (i, field) => {\n                var $field = jQuery(field);\n                if ( $field.prop['type'] !== 'checkbox' ) {\n                    $field.val('');\n                }\n            });\n        }\n\n        validateForm() : boolean {\n            var errors = 0;\n            this.$fields.each( (i, field) => {\n                var $field = jQuery(field),\n                    name = $field.data('scif-param'),\n                    required = $field.data('scif-required');\n\n                if ( required && ( $field.val() === '' ) ) {\n                    jQuery( '.' + name + '-error' ).addClass('active');\n                    errors++;\n                } else {\n                    jQuery( '.' + name + '-error' ).removeClass('active');\n                }\n            });\n\n            if ( errors ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        parseShortcode() {\n            var data = this.getFormValues();\n            this.insertShortcode(data);\n        }\n\n        getFormValues() {\n            var data = {\n                command: this.selectedShortcode,\n                params: {}\n            };\n\n            this.$fields.each( (i, field) => {\n                var $field = jQuery(field),\n                    param  = $field.data('scif-param'),\n                    value  = '';\n\n                switch( $field.prop('tagName') ) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                    case 'SELECT':\n                        if ($field.prop('type') === 'checkbox') {\n                            if ( $field.hasClass( 'checkbox-list-item' ) ) {\n                                if ( $field.prop('checked') ) {\n                                    value = $field.val();\n                                } else {\n                                    break;\n                                }\n                            } else {\n                                value = String($field.prop('checked'));\n                            }\n                        } else {\n                            value = $field.val();\n                        }\n                        break;\n                    default:\n                        value = $field.val();\n                }\n\n                if (value) {\n                    if (typeof data.params[param] !== 'undefined') {\n                        data.params[param] += ',' + value;\n                    } else {\n                        data.params[param] = value;\n                    }\n                }\n            });\n\n            return data;\n        }\n\n        insertShortcode(data) {\n            var text = this.buildShortcode(data);\n            send_to_editor( text );\n        }\n\n        buildShortcode(data) {\n            var enclosingText = null;\n\n            if ( this.editor ) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = '[' + data.command;\n\n            if (data.params) {\n                for (var key in data.params) {\n                    text += ' ' + key + '=\"' + data.params[key] + '\"';\n                }\n            }\n\n            text += ']';\n\n            if ( enclosingText ) {\n                text += enclosingText + '[/' + data.command + ']';\n            }\n\n            return text;\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n            var shortcode = this.$select.val();\n\n            var $fields = jQuery('.shortcode-' + shortcode).find('.wp-scif-field');\n\n            if ( this.validateForm() ) {\n                this.parseShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            this.selectedShortcode = this.$select.val();\n\n            if ( this.selectedShortcode.length === 0 ) {\n                jQuery('#wp-scif-form-inner .active').removeClass('active');\n            }\n\n            jQuery('.shortcode-' + this.selectedShortcode).addClass('active');\n            this.initPreview();\n        }\n\n        initPreview() {\n            var data = this.getFormValues();\n\n            if (data.command){\n                var shortcode = this.buildShortcode(data);\n\n                jQuery.getJSON(ajaxurl, {\n                    action: 'render_shortcode',\n                    shortcode: shortcode\n                }, (data) => {\n                    var ifrm = <any>document.getElementById(this.selectedShortcode + '-preview');\n                    ifrm = ifrm.contentWindow || ifrm.contentDocument.document || ifrm.contentDocument;\n                    ifrm.document.open();\n                    ifrm.document.write(data.markup);\n                    ifrm.document.close();\n                });   \n            }         \n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}