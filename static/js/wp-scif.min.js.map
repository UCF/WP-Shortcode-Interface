{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","preview.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","fieldID","attr","required","data","param","prototype","isValid","id","getValue","jQuery","addClass","removeClass","setDefaultValue","val","hasValue","getOutput","TextField","_super","_this","call","inputMask","on","timer","clearTimeout","setTimeout","trigger","__extends","RegExp","test","SelectField","options","Array","find","each","idx","obj","push","inArray","prop","DateField","ColorField","CheckboxField","is","PreviewWindow","iframe","get","document","contentWindow","contentDocument","$container","write","content","parser","createElement","href","src","params","parseSearch","search","buildUrl","show","hide","retval","paramString","substring","splitAnd","split","i","p","buildSearch","paramsJoined","encodeURIComponent","join","protocol","hostname","pathname","FieldSet","command","$description","allowContent","supportsPreview","fields","field","createField","e","init","forEach","destroy","unbind","tagName","getFields","errorCount","getValues","buildShortcode","text","outputArr","length","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","activeFieldSet","editor","tinyMCE","activeEditor","preview","click","onSubmitBtnClick","change","onSelectChanged","enclosingText","selection","getContent","insertShortcode","send_to_editor","preventDefault","sc","updatePreview","shortcode","ready","shortcodeInterface","tinymce"],"mappings":"AAAA,GAAUA,SAAV,SAAUA,IAAO,SAAAC,GACb,GAAAC,GAAA,WAOI,QAAAA,GAAYC,GACRC,KAAKD,OAASA,EACdC,KAAKC,QAAUD,KAAKD,OAAOG,KAAK,MAChCF,KAAKG,SAAoBH,KAAKD,OAAOK,KAAK,qBACb,KAAlBJ,KAAKG,WACZH,KAAKG,UAAW,GAEpBH,KAAKK,MAAQL,KAAKD,OAAOK,KAAK,cAC9BJ,KAAY,QAAGA,KAAKD,OAAOK,KAAK,gBAqCxC,MAlCWN,GAAAQ,UAAAC,QAAP,WACI,GAAIC,GAAK,IAAMR,KAAKC,QAAU,IAAMD,KAAKK,MAAQ,QAEjD,OAAIL,MAAKG,WAAcH,KAAKS,YACxBC,OAAOF,GAAIG,SAAS,WACb,IAEXD,OAAOF,GAAII,YAAY,WAChB,IAGJd,EAAAQ,UAAAO,gBAAP,WACQb,KAAY,QACZA,KAAKD,OAAOe,IAAId,KAAY,SAE5BA,KAAKD,OAAOe,IAAI,KAIjBhB,EAAAQ,UAAAS,SAAP,WACI,QAAIf,KAAKS,YAONX,EAAAQ,UAAAG,SAAP,WACI,MAAOT,MAAKD,OAAOe,OAGhBhB,EAAAQ,UAAAU,UAAP,WACI,MAAOhB,MAAKK,MAAQ,KAAOL,KAAKS,WAAa,KAErDX,IApDsBD,GAAAC,MAAKA,GADdF,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,2VCAAA,QAAV,SAAUA,IAAO,SAAAC,GACb,GAAAoB,GAAA,SAAAC,GAII,QAAAD,GAAYlB,GAAZ,GAAAoB,GACID,EAAAE,KAAApB,KAAMD,IAAOC,WACbmB,GAAKE,UAAYF,EAAKpB,OAAOK,KAAK,sBAElCe,EAAKpB,OAAOuB,GAAG,QAAS,WAChBH,EAAKI,OACLC,aAAaL,EAAKI,OAGtBJ,EAAKI,MAAQE,WAAY,WACrBN,EAAKpB,OAAO2B,QAAQ,wBACrB,SAYf,MA3B+BC,WAAAV,EAAAC,GAmBpBD,EAAAX,UAAAC,QAAP,WACgBW,EAAAZ,UAAMC,QAAOa,KAAApB,KAKzB,OAHc,IAAI4B,QAAO5B,KAAKqB,WACVQ,KAAK7B,KAAKS,aAItCQ,GA3B+BpB,EAAAC,MAAlBD,GAAAoB,UAASA,GADTrB,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,2VCAAA,QAAV,SAAUA,IAAO,SAAAC,GACb,GAAAiC,GAAA,SAAAZ,GAGI,QAAAY,GAAY/B,GAAZ,GAAAoB,GACID,EAAAE,KAAApB,KAAMD,IAAOC,WACbmB,GAAKY,QAAU,GAAIC,OACnBb,EAAKpB,OAAOkC,KAAK,UAAUC,KAAM,SAACC,EAAKC,GACnCjB,EAAKY,QAAQM,KAAK3B,OAAO0B,GAAKtB,SAGlCK,EAAKpB,OAAOuB,GAAG,SAAU,WACrBH,EAAKpB,OAAO2B,QAAQ,qBAchC,MAzBiCC,WAAAG,EAAAZ,GAetBY,EAAAxB,UAAAO,gBAAP,WACQb,KAAY,QACZA,KAAKD,OAAOe,IAAId,KAAY,SACrBU,OAAO4B,QAAQ,GAAItC,KAAK+B,UAAY,EAC3C/B,KAAKD,OAAOe,IAAI,KAEhBd,KAAKD,OAAOkC,KAAK,mBAAmBM,KAAK,YAAY,GACrDvC,KAAKD,OAAOkC,KAAK,gBAAgBM,KAAK,WAAY,cAG9DT,GAzBiCjC,EAAAC,MAApBD,GAAAiC,YAAWA,GADXlC,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,2VCAAA,QAAV,SAAUA,IAAO,SAAAC,GACb,GAAA2C,GAAA,SAAAtB,GAGI,QAAAsB,GAAYzC,GAAZ,GAAAoB,GACID,EAAAE,KAAApB,KAAMD,IAAOC,WAEbmB,GAAKpB,OAAOuB,GAAG,SAAU,WACrBH,EAAKpB,OAAO2B,QAAQ,qBAGhC,MAV+BC,WAAAa,EAAAtB,GAU/BsB,GAV+B3C,EAAAC,MAAlBD,GAAA2C,UAASA,GADT5C,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,2VCAAA,QAAV,SAAUA,IAAO,SAAAC,GACb,GAAA4C,GAAA,SAAAvB,GACI,QAAAuB,GAAY1C,GAAZ,GAAAoB,GACID,EAAAE,KAAApB,KAAMD,IAAOC,WAEbmB,GAAKpB,OAAOuB,GAAG,SAAU,WACrBH,EAAKpB,OAAO2B,QAAQ,qBAGhC,MARgCC,WAAAc,EAAAvB,GAQhCuB,GARgC5C,EAAAC,MAAnBD,GAAA4C,WAAUA,GADV7C,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,2VCAAA,QAAV,SAAUA,IAAO,SAAAC,GACb,GAAA6C,GAAA,SAAAxB,GACI,QAAAwB,GAAY3C,GAAZ,GAAAoB,GACID,EAAAE,KAAApB,KAAMD,IAAOC,WAEbmB,GAAKpB,OAAOuB,GAAG,SAAU,WACrBH,EAAKpB,OAAO2B,QAAQ,qBAehC,MApBmCC,WAAAe,EAAAxB,GASxBwB,EAAApC,UAAAG,SAAP,WACI,MAAOT,MAAKD,OAAO4C,GAAG,aAGnBD,EAAApC,UAAAO,gBAAP,WACyB,OAAjBb,KAAY,QACZA,KAAKD,OAAOwC,KAAK,WAAW,GAE5BvC,KAAKD,OAAOwC,KAAK,WAAW,IAGxCG,GApBmC7C,EAAAC,MAAtBD,GAAA6C,cAAaA,GADb9C,EAAAC,SAAAD,EAAAC,aAAPD,SAAAA,WCAV,IAAUA,SAAV,SAAUA,GACN,GAAAgD,GAAA,WAKI,QAAAA,KACI5C,KAAK6C,OAA4BnC,OAAO,wBAAwBoC,IAAI,GACpE9C,KAAK+C,SAAW/C,KAAK6C,OAAOG,eAAiBhD,KAAK6C,OAAOI,gBACzDjD,KAAKkD,WAAaxC,OAAO,wBAqDjC,MAlDIkC,GAAAtC,UAAA6C,MAAA,SAAMC,GACF,GAAIC,GAASN,SAASO,cAAc,IACpCD,GAAOE,KAAOvD,KAAK6C,OAAOW,GAE1B,IAAIC,GAASzD,KAAK0D,YAAYL,EAAOM,OACrCF,GAAkB,UAAIL,EAEtBpD,KAAK6C,OAAOW,IAAMxD,KAAK4D,SAASP,EAAQI,IAG5Cb,EAAAtC,UAAAuD,KAAA,WACI7D,KAAKkD,WAAWW,QAGpBjB,EAAAtC,UAAAwD,KAAA,WACI9D,KAAKkD,WAAWY,QAGpBlB,EAAAtC,UAAAoD,YAAA,SAAYC,GACR,GAAII,MACAC,EAAcL,EAAOM,UAAU,GAC/BC,EAAWF,EAAYG,MAAM,IAEjC,KAAI,GAAIC,KAAKF,GAAU,CACnB,GAAIG,GAAIH,EAASE,GAAGD,MAAM,IAC1BJ,GAAOM,EAAE,IAAMA,EAAE,GAGrB,MAAON,IAGXnB,EAAAtC,UAAAgE,YAAA,SAAYb,GACR,GACIc,GAAe,GAAIvC,MAEvB,KAAI,GAAIoC,KAAKX,GACTc,EAAalC,KAAK+B,EAAI,IAAMI,mBAAmBf,EAAOW,IAG1D,OAPa,IAOGG,EAAaE,KAAK,MAGtC7B,EAAAtC,UAAAsD,SAAA,SAASP,EAAQI,GACb,GAAIM,GAASV,EAAOqB,SAAW,IAK/B,OAJAX,IAAUV,EAAOsB,SACjBZ,GAAUV,EAAOuB,SACjBb,GAAU/D,KAAKsE,YAAYb,IAInCb,IA7DahD,GAAAgD,cAAaA,GADpBhD,SAAAA,WCEV,IAAUA,SAAV,SAAUA,GACN,GAAAiF,GAAA,WAQI,QAAAA,GAAYC,GAAZ,GAAA3D,GAAAnB,IACIA,MAAK8E,QAAUA,EACf9E,KAAKkD,WAAaxC,OAAO,+BAAiCoE,GAC1D9E,KAAK+E,aAAerE,OAAO,6BAA+BV,KAAK8E,SAC/D9E,KAAKgF,aAAehF,KAAKkD,WAAWP,GAAG,8BACvC3C,KAAKiF,gBAAkBjF,KAAKkD,WAAWP,GAAG,uBAC1C3C,KAAKkF,OAAS,GAAIlD,OACJhC,KAAKkD,WAAWjB,KAAK,kBAE3BC,KAAM,SAACC,EAAKC,GAChB,GAAI+C,GAAQhE,EAAKiE,YAAYhD,EAC7BjB,GAAK+D,OAAO7C,KAAK8C,KAGrBzE,OAAO,kBAAkBY,GAAG,sBAAuB,SAAC+D,GAChDlE,EAAK+B,WAAWxB,QAAQ,4BAG5B1B,KAAKsF,OA2Fb,MAxFYT,GAAAvE,UAAAgF,KAAR,WACItF,KAAKkF,OAAOK,QAAS,SAACJ,GAClBA,EAAMtE,oBAGVb,KAAKkD,WAAWvC,SAAS,UACzBX,KAAK+E,aAAapE,SAAS,WAGxBkE,EAAAvE,UAAAkF,QAAP,WACIxF,KAAKkD,WAAWtC,YAAY,UAC5BZ,KAAK+E,aAAanE,YAAY,UAC9BF,OAAO,kBAAkB+E,OAAO,wBAG5BZ,EAAAvE,UAAA8E,YAAR,SAAoBhD,GAChB,GAAIrC,GAASW,OAAO0B,GAChBsD,EAAU3F,EAAOwC,KAAK,UAE1B,IAAgB,WAAZmD,EACA,MAAO,IAAI9F,GAAAC,OAAOiC,YAAY/B,EAC3B,IAAgB,UAAZ2F,EAAqB,CAE5B,OADW3F,EAAOG,KAAK,SAEnB,IAAK,OACD,MAAO,IAAIN,GAAAC,OAAOoB,UAAUlB,EAChC,KAAK,OACD,MAAO,IAAIH,GAAAC,OAAO2C,UAAUzC,EAChC,KAAK,WACD,MAAO,IAAIH,GAAAC,OAAO6C,cAAc3C,EACpC,SACI,MAAO,IAAIH,GAAAC,OAAOoB,UAAUlB,MAKrC8E,EAAAvE,UAAAqF,UAAP,WACI,MAAO3F,MAAKkF,QAGTL,EAAAvE,UAAAC,QAAP,WACI,GAAIqF,GAAqB,CAQzB,OANA5F,MAAKkF,OAAOK,QAAS,SAACJ,GACbA,EAAM5E,SACPqF,QAIJA,EAAa,IAOdf,EAAAvE,UAAAuF,UAAP,WACI,GAAI9B,GAAS/B,OAQb,OANAhC,MAAKkF,OAAOK,QAAS,SAACJ,GACdA,EAAMpE,YACNgD,EAAO1B,KAAK8C,EAAMnE,eAInB+C,GAGJc,EAAAvE,UAAAwF,eAAP,SAAsBC,OAAA,KAAAA,IAAAA,EAAA,GAClB,IAAIhC,GAAS,IAAM/D,KAAK8E,QACpBkB,EAAYhG,KAAK6F,WAgBrB,OAdIG,GAAUC,OAAS,IACnBlC,GAAU,IAAMiC,EAAUvB,KAAK,MAGnCV,GAAU,IAENgC,IACAhC,GAAUgC,GAGV/F,KAAKgF,eACLjB,GAAU,KAAO/D,KAAK8E,QAAU,KAG7Bf,GAEfc,IArHajF,GAAAiF,SAAQA,GADfjF,SAAAA,WCKV,IAAUA,SAAV,SAAUA,GACN,GAAAsG,GAAA,WASI,QAAAA,KAAA,GAAA/E,GAAAnB,IACIA,MAAKmG,QAAUzF,OAAO,kBACtBV,KAAKoG,WAAa1F,OAAO,uBACzBV,KAAKqG,WAAarG,KAAKoG,WAAWnE,KAAK,mBACvCjC,KAAKsG,QAAUtG,KAAKoG,WAAWnE,KAAK,mBACpCjC,KAAKuG,eAAiB,KACtBvG,KAAKwG,OAASC,QAAQC,aACtB1G,KAAK2G,QAAU,GAAI/G,GAAAgD,cACnB5C,KAAK2G,QAAQ7C,OAEb9D,KAAKqG,WAAWO,MAAO,SAACvB,GAAQlE,EAAK0F,iBAAiBxB,KACtDrF,KAAKsG,QAAQQ,OAAQ,SAACzB,GAAQlE,EAAK4F,gBAAgB1B,KAqD3D,MAlDIa,GAAA5F,UAAAwF,eAAA,WACI,GAAIkB,GAAgB,IAMpB,OAJIhH,MAAKwG,SACLQ,EAAgBhH,KAAKwG,OAAOS,UAAUC,cAGnClH,KAAKuG,eAAeT,eAAekB,IAG9Cd,EAAA5F,UAAA6G,gBAAA,WACI,GAAIpB,GAAO/F,KAAK8F,gBAChBsB,gBAAgBrB,IAGpBG,EAAA5F,UAAAuG,iBAAA,SAAiBxB,GACbA,EAAEgC,iBAEGrH,KAAKuG,eAAehG,WACrBP,KAAKmH,mBAIbjB,EAAA5F,UAAAyG,gBAAA,SAAgB1B,GAAhB,GAAAlE,GAAAnB,IACQA,MAAKuG,iBACLvG,KAAKuG,eAAef,UACpBxF,KAAKuG,eAAerD,WAAWuC,OAAO,0BAG1C,IAAI6B,GAAKtH,KAAKsG,QAAQxF,KAEtBd,MAAKuG,eAAiB,GAAI3G,GAAAiF,SAASyC,GAE/BtH,KAAKuG,eAAetB,iBACpBjF,KAAKuG,eAAerD,WAAW5B,GAAG,yBAA0B,WACxDH,EAAKoG,kBAGTvH,KAAKuH,gBAELvH,KAAK2G,QAAQ9C,QAEb7D,KAAK2G,QAAQ7C,QAIrBoC,EAAA5F,UAAAiH,cAAA,WACI,GAAIC,GAAYxH,KAAK8F,gBACrB9F,MAAK2G,QAAQxD,MAAMqE,IAE3BtB,IAzEatG,GAAAsG,mBAAkBA,GADzBtG,SAAAA,YA6Ea,mBAAXc,SACRA,OAAOqC,UAAU0E,MAAO,WACpB,GAAIC,EAEJC,SAAQrG,GAAG,YAAa,SAAC+D,GACdqC,IACHA,EAAqB,GAAI9H,QAAOsG","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n        private fieldID: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.fieldID = this.$field.attr('id');\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            var id = '#' + this.fieldID + '-' + this.param + '-error';\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery(id).addClass('active');\n                return false;\n            }\n            jQuery(id).removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public hasValue() {\n            if (this.getValue()) {\n                return true;\n            }\n\n            return false;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n        timer: any;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n\n            this.$field.on('input', () => {\n                if (this.timer) {\n                    clearTimeout(this.timer)\n                }\n\n                this.timer = setTimeout( () => {\n                    this.$field.trigger('wpscif:field:update');\n                }, 500);\n            });\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        options: Array<string>;\n\n        constructor($field: any) {\n            super($field)\n            this.options = new Array<string>();\n            this.$field.find('option').each( (idx, obj) => {\n                this.options.push(jQuery(obj).val());\n            });\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else if (jQuery.inArray('', this.options) > -1) {\n                this.$field.val('');\n            } else {\n                this.$field.find('option:selected').prop('selected', false);\n                this.$field.find('option:first').prop('selected', 'selected');\n            }\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","namespace WPSCIF {\n    export class PreviewWindow {\n        iframe: any;\n        document: any;\n        $container: any;\n\n        constructor() {\n            this.iframe = <HTMLIFrameElement>jQuery('#scif-preview-iframe').get(0);\n            this.document = this.iframe.contentWindow || this.iframe.contentDocument;\n            this.$container = jQuery('#scif-preview-window');\n        }\n\n        write(content: string) {\n            var parser = document.createElement('a');\n            parser.href = this.iframe.src;\n            \n            var params = this.parseSearch(parser.search);\n            params['shortcode'] = content;\n\n            this.iframe.src = this.buildUrl(parser, params);\n        }\n\n        show() {\n            this.$container.show();\n        }\n\n        hide() {\n            this.$container.hide();\n        }\n\n        parseSearch(search: string) {\n            var retval = [];\n            var paramString = search.substring(1);\n            var splitAnd = paramString.split('&');\n            \n            for(var i in splitAnd) {\n                var p = splitAnd[i].split('=');\n                retval[p[0]] = p[1];\n            }\n\n            return retval;\n        }\n\n        buildSearch(params: Array<string>) {\n            var retval = '?';\n            var paramsJoined = new Array<string>();\n\n            for(var i in params) {\n                paramsJoined.push(i + '=' + encodeURIComponent(params[i]));\n            }\n\n            return retval + paramsJoined.join('&');\n        }\n\n        buildUrl(parser, params) {\n            var retval = parser.protocol + '//';\n            retval += parser.hostname;\n            retval += parser.pathname;\n            retval += this.buildSearch(params);\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        public $container: any;\n        private $description: any;\n        public allowContent: boolean;\n        public supportsPreview: boolean;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.$description = jQuery('.shortcode-desc.shortcode-' + this.command);\n            this.allowContent = this.$container.is('[data-scif-allows-content]');\n            this.supportsPreview = this.$container.is('[data-scif-preview]');\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var field = this.createField(obj);\n                this.fields.push(field);\n            });\n\n            jQuery('.wp-scif-field').on('wpscif:field:update', (e) => {\n                this.$container.trigger('wpscif:fieldset:update');\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n            this.$description.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('active');\n            this.$description.removeClass('active');\n            jQuery('.wp-scif-field').unbind('wpscif:field:update');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                if (field.hasValue()) {\n                    retval.push(field.getOutput());\n                }\n            });\n\n            return retval;\n        }\n\n        public buildShortcode(text='') {\n            var retval = '[' + this.command;\n            var outputArr = this.getValues();\n            \n            if (outputArr.length > 0) {\n                retval += ' ' + outputArr.join(' ');\n            }\n\n            retval += ']';\n\n            if (text) {\n                retval += text;\n            }\n\n            if (this.allowContent) {\n                retval += '[/' + this.command + ']';\n            }\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any; // The WP tinymce editor\ndeclare var tinymce: any; // The tinymce object\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public activeFieldSet: FieldSet;\n        public preview: PreviewWindow;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.activeFieldSet = null;\n            this.editor = tinyMCE.activeEditor;\n            this.preview = new PreviewWindow();\n            this.preview.hide();\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        buildShortcode() {\n            var enclosingText = null;\n\n            if (this.editor) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            return this.activeFieldSet.buildShortcode(enclosingText);\n        }\n\n        insertShortcode() {\n            var text = this.buildShortcode();\n            send_to_editor( text );\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.activeFieldSet.isValid() ) {\n                this.insertShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            if (this.activeFieldSet) {\n                this.activeFieldSet.destroy();\n                this.activeFieldSet.$container.unbind('wpscif:fieldset:update');\n            }\n\n            var sc = this.$select.val();\n\n            this.activeFieldSet = new FieldSet(sc);\n\n            if (this.activeFieldSet.supportsPreview) {\n                this.activeFieldSet.$container.on('wpscif:fieldset:update', () => {\n                    this.updatePreview();\n                });\n\n                this.updatePreview();\n\n                this.preview.show();\n            } else {\n                this.preview.hide();\n            }\n        }\n\n        updatePreview() {\n            var shortcode = this.buildShortcode();\n            this.preview.write(shortcode);\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( () => {\n        var shortcodeInterface: WPSCIF.ShortcodeInterface;\n\n        tinymce.on('addeditor', (e) => {\n            if ( ! shortcodeInterface) {\n                shortcodeInterface = new WPSCIF.ShortcodeInterface();   \n            }\n        });\n    });\n}\n"]}