{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","required","data","param","prototype","isValid","getValue","jQuery","addClass","removeClass","setDefaultValue","val","getOutput","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","DateField","ColorField","CheckboxField","is","prop","FieldSet","command","$container","fields","Array","find","each","idx","obj","push","createField","init","forEach","field","destroy","tagName","attr","getFields","errorCount","getValues","retval","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","selectedShortcode","$activeShortcodeEditor","$activeShortcodeDescription","$activeFields","click","e","onSubmitBtnClick","change","onSelectChanged","validateForm","errors","i","name","parseShortcode","getFormValues","insertShortcode","params","allowsContent","undefined","value","hasClass","String","text","buildShortcode","send_to_editor","enclosingText","editor","selection","getContent","key","preventDefault","$activeShortcodeElems","filter","initPreview","shortcode","window","frames","append","getJSON","ajaxurl","action","ifrm","document","getElementById","contentWindow","contentDocument","open","write","markup","close","ready"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery('.' + this.param + '-error').addClass('active');\n                return false;\n            }\n            jQuery('.' + this.param + '-error').removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        constructor($field: any) {\n            super($field)\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(this.createField(obj));\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('acitve');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                retval.push(field.param + '=' + field.getValue());\n            });\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public selectedShortcode: string;\n        public $activeShortcodeEditor: any;\n        public $activeShortcodeDescription: any;\n        public $activeFields: any;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.selectedShortcode = null;\n            this.$activeShortcodeEditor = null;\n            this.$activeShortcodeDescription = null;\n            this.$activeFields = null;\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        validateForm() : boolean {\n            var errors = 0;\n\n            if (this.$activeFields) {\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field),\n                        name = $field.data('scif-param'),\n                        required = $field.data('scif-required');\n\n                    if ( required && ( $field.val() === '' ) ) {\n                        jQuery( '.' + name + '-error' ).addClass('active');\n                        errors++;\n                    } else {\n                        jQuery( '.' + name + '-error' ).removeClass('active');\n                    }\n                } );\n            }\n            else {\n                errors++;\n            }\n\n            if ( errors ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        parseShortcode() {\n            var data = this.getFormValues();\n            this.insertShortcode(data);\n        }\n\n        getFormValues() {\n            var data = {\n                command: this.selectedShortcode,\n                params: {},\n                allowsContent: this.$activeShortcodeEditor.data('scif-allows-content') !== undefined\n            };\n\n            this.$activeFields.each( (i, field) => {\n                var $field = jQuery(field),\n                    param  = $field.data('scif-param'),\n                    value  = '';\n\n                switch( $field.prop('tagName') ) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                    case 'SELECT':\n                        if ($field.prop('type') === 'checkbox') {\n                            if ( $field.hasClass( 'checkbox-list-item' ) ) {\n                                if ( $field.prop('checked') ) {\n                                    value = $field.val();\n                                } else {\n                                    break;\n                                }\n                            } else {\n                                value = String($field.prop('checked'));\n                            }\n                        } else {\n                            value = $field.val();\n                        }\n                        break;\n                    default:\n                        value = $field.val();\n                }\n\n                if (value) {\n                    if (typeof data.params[param] !== 'undefined') {\n                        data.params[param] += ',' + value;\n                    } else {\n                        data.params[param] = value;\n                    }\n                }\n            });\n\n            return data;\n        }\n\n        insertShortcode(data) {\n            var text = this.buildShortcode(data);\n            send_to_editor( text );\n        }\n\n        buildShortcode(data) {\n            var enclosingText = null;\n\n            if ( this.editor ) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = '[' + data.command;\n\n            if (data.params) {\n                for (var key in data.params) {\n                    text += ' ' + key + '=\"' + data.params[key] + '\"';\n                }\n            }\n\n            text += ']';\n\n            if ( enclosingText ) {\n                text += enclosingText;\n            }\n            if ( data.allowsContent ) {\n                text += '[/' + data.command + ']';\n            }\n\n            return text;\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.validateForm() ) {\n                this.parseShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            this.selectedShortcode = this.$select.val();\n\n            if (this.$activeShortcodeEditor) {\n                this.$activeShortcodeEditor.removeClass('active');\n            }\n            if (this.$activeShortcodeDescription) {\n                this.$activeShortcodeDescription.removeClass('active');\n            }\n\n            // $activeShortcodeElems references both the shortcode editor and\n            // the shortcode description\n            var $activeShortcodeElems = this.$interface.find('.shortcode-' + this.selectedShortcode).addClass('active');\n            this.$activeShortcodeEditor = $activeShortcodeElems.filter('.shortcode-editor');\n            this.$activeShortcodeDescription = $activeShortcodeElems.filter('.shortcode-desc');\n            this.$activeFields = this.$activeShortcodeEditor.find('.wp-scif-field');\n\n            this.initPreview();\n        }\n\n        initPreview() {\n            var data = this.getFormValues();\n\n            if (data.command) {\n                var shortcode = this.buildShortcode(data);\n                // var stylesheet = jQuery('#' + this.selectedShortcode + '-preview').data('styles');\n                // var link  = jQuery('link').attr('href', stylesheet);\n                jQuery('head', window.frames[this.selectedShortcode + '-preview']).append('Hello world');\n                jQuery.getJSON(ajaxurl, {\n                    action: 'render_shortcode',\n                    shortcode: shortcode\n                }, (data) => {\n                    var ifrm = <any>document.getElementById(this.selectedShortcode + '-preview');\n                    \n                    ifrm = ifrm.contentWindow || ifrm.contentDocument.document || ifrm.contentDocument;\n                    ifrm.document.open();\n                    ifrm.document.write(data.markup);\n                    ifrm.document.close();\n                });\n            }\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}