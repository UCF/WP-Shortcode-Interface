{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","required","data","param","prototype","isValid","getValue","setDefaultValue","val","getOutput","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","DateField","ColorField","CheckboxField","is","prop","FieldSet","command","$container","jQuery","fields","Array","find","each","idx","obj","push","createField","init","forEach","field","tagName","attr","getFields","getValues","console","log","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","selectedShortcode","$activeShortcodeEditor","$activeShortcodeDescription","$activeFields","click","e","resetForm","onSubmitBtnClick","change","onSelectChanged","editor","tinyMCE","activeEditor","trigger","i","validateForm","errors","name","addClass","removeClass","parseShortcode","getFormValues","insertShortcode","params","allowsContent","undefined","value","hasClass","String","text","buildShortcode","send_to_editor","enclosingText","selection","getContent","key","preventDefault","$activeShortcodeElems","filter","initPreview","shortcode","window","frames","append","getJSON","ajaxurl","action","ifrm","document","getElementById","contentWindow","contentDocument","open","write","markup","close","ready"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                return false;\n            }\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        constructor($field: any) {\n            super($field)\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(this.createField(obj));\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public getValues() {\n            this.fields.forEach( (field) => {\n                console.log(field.param + '=' + field.getValue());\n            });\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public selectedShortcode: string;\n        public $activeShortcodeEditor: any;\n        public $activeShortcodeDescription: any;\n        public $activeFields: any;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.selectedShortcode = null;\n            this.$activeShortcodeEditor = null;\n            this.$activeShortcodeDescription = null;\n            this.$activeFields = null;\n\n            this.$toggle.click( (e) => { this.resetForm() } );\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        resetForm() {\n            this.editor = tinyMCE.activeEditor ? tinyMCE.activeEditor : null;\n            this.$select.val('').trigger('change');\n            if (this.$activeFields) {\n                this.$activeFields.prop('checked', false);\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field);\n                    if ( $field.prop['type'] !== 'checkbox' ) {\n                        $field.val('');\n                    }\n                });\n            }\n        }\n\n        validateForm() : boolean {\n            var errors = 0;\n\n            if (this.$activeFields) {\n                this.$activeFields.each( (i, field) => {\n                    var $field = jQuery(field),\n                        name = $field.data('scif-param'),\n                        required = $field.data('scif-required');\n\n                    if ( required && ( $field.val() === '' ) ) {\n                        jQuery( '.' + name + '-error' ).addClass('active');\n                        errors++;\n                    } else {\n                        jQuery( '.' + name + '-error' ).removeClass('active');\n                    }\n                } );\n            }\n            else {\n                errors++;\n            }\n\n            if ( errors ) {\n                return false;\n            }\n\n            return true;\n        }\n\n        parseShortcode() {\n            var data = this.getFormValues();\n            this.insertShortcode(data);\n        }\n\n        getFormValues() {\n            var data = {\n                command: this.selectedShortcode,\n                params: {},\n                allowsContent: this.$activeShortcodeEditor.data('scif-allows-content') !== undefined\n            };\n\n            this.$activeFields.each( (i, field) => {\n                var $field = jQuery(field),\n                    param  = $field.data('scif-param'),\n                    value  = '';\n\n                switch( $field.prop('tagName') ) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                    case 'SELECT':\n                        if ($field.prop('type') === 'checkbox') {\n                            if ( $field.hasClass( 'checkbox-list-item' ) ) {\n                                if ( $field.prop('checked') ) {\n                                    value = $field.val();\n                                } else {\n                                    break;\n                                }\n                            } else {\n                                value = String($field.prop('checked'));\n                            }\n                        } else {\n                            value = $field.val();\n                        }\n                        break;\n                    default:\n                        value = $field.val();\n                }\n\n                if (value) {\n                    if (typeof data.params[param] !== 'undefined') {\n                        data.params[param] += ',' + value;\n                    } else {\n                        data.params[param] = value;\n                    }\n                }\n            });\n\n            return data;\n        }\n\n        insertShortcode(data) {\n            var text = this.buildShortcode(data);\n            send_to_editor( text );\n        }\n\n        buildShortcode(data) {\n            var enclosingText = null;\n\n            if ( this.editor ) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = '[' + data.command;\n\n            if (data.params) {\n                for (var key in data.params) {\n                    text += ' ' + key + '=\"' + data.params[key] + '\"';\n                }\n            }\n\n            text += ']';\n\n            if ( enclosingText ) {\n                text += enclosingText;\n            }\n            if ( data.allowsContent ) {\n                text += '[/' + data.command + ']';\n            }\n\n            return text;\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.validateForm() ) {\n                this.parseShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            this.selectedShortcode = this.$select.val();\n\n            if (this.$activeShortcodeEditor) {\n                this.$activeShortcodeEditor.removeClass('active');\n            }\n            if (this.$activeShortcodeDescription) {\n                this.$activeShortcodeDescription.removeClass('active');\n            }\n\n            // $activeShortcodeElems references both the shortcode editor and\n            // the shortcode description\n            var $activeShortcodeElems = this.$interface.find('.shortcode-' + this.selectedShortcode).addClass('active');\n            this.$activeShortcodeEditor = $activeShortcodeElems.filter('.shortcode-editor');\n            this.$activeShortcodeDescription = $activeShortcodeElems.filter('.shortcode-desc');\n            this.$activeFields = this.$activeShortcodeEditor.find('.wp-scif-field');\n\n            this.initPreview();\n        }\n\n        initPreview() {\n            var data = this.getFormValues();\n\n            if (data.command) {\n                var shortcode = this.buildShortcode(data);\n                // var stylesheet = jQuery('#' + this.selectedShortcode + '-preview').data('styles');\n                // var link  = jQuery('link').attr('href', stylesheet);\n                jQuery('head', window.frames[this.selectedShortcode + '-preview']).append('Hello world');\n                jQuery.getJSON(ajaxurl, {\n                    action: 'render_shortcode',\n                    shortcode: shortcode\n                }, (data) => {\n                    var ifrm = <any>document.getElementById(this.selectedShortcode + '-preview');\n                    \n                    ifrm = ifrm.contentWindow || ifrm.contentDocument.document || ifrm.contentDocument;\n                    ifrm.document.open();\n                    ifrm.document.write(data.markup);\n                    ifrm.document.close();\n                });\n            }\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}