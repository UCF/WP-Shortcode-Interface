{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","preview.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","fieldID","attr","required","data","param","prototype","isValid","id","getValue","jQuery","addClass","removeClass","setDefaultValue","val","hasValue","getOutput","TextField","_super","_this","call","inputMask","on","timer","clearTimeout","setTimeout","trigger","__extends","RegExp","test","SelectField","options","Array","find","each","idx","obj","push","inArray","prop","DateField","ColorField","CheckboxField","is","PreviewWindow","iframe","get","document","contentWindow","contentDocument","$container","write","content","parser","createElement","href","src","params","parseSearch","search","buildUrl","retval","paramString","substring","splitAnd","split","i","p","buildSearch","paramsJoined","encodeURIComponent","join","protocol","hostname","pathname","FieldSet","command","$description","allowContent","fields","field","createField","e","init","forEach","destroy","unbind","tagName","getFields","errorCount","getValues","buildShortcode","text","outputArr","length","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","activeFieldSet","editor","tinyMCE","activeEditor","preview","click","onSubmitBtnClick","change","onSelectChanged","enclosingText","selection","getContent","insertShortcode","send_to_editor","preventDefault","sc","updatePreview","shortcode","ready","shortcodeInterface","tinymce"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n        private fieldID: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.fieldID = this.$field.attr('id');\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            var id = '#' + this.fieldID + '-' + this.param + '-error';\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery(id).addClass('active');\n                return false;\n            }\n            jQuery(id).removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public hasValue() {\n            if (this.getValue()) {\n                return true;\n            }\n\n            return false;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n        timer: any;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n\n            this.$field.on('input', () => {\n                if (this.timer) {\n                    clearTimeout(this.timer)\n                }\n\n                this.timer = setTimeout( () => {\n                    this.$field.trigger('wpscif:field:update');\n                }, 500);\n            });\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        options: Array<string>;\n\n        constructor($field: any) {\n            super($field)\n            this.options = new Array<string>();\n            this.$field.find('option').each( (idx, obj) => {\n                this.options.push(jQuery(obj).val());\n            });\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else if (jQuery.inArray('', this.options) > -1) {\n                this.$field.val('');\n            } else {\n                this.$field.find('option:selected').prop('selected', false);\n                this.$field.find('option:first').prop('selected', 'selected');\n            }\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","namespace WPSCIF {\n    export class PreviewWindow {\n        iframe: any;\n        document: any;\n        $container: any;\n\n        constructor() {\n            this.iframe = <HTMLIFrameElement>jQuery('#scif-preview-iframe').get(0);\n            this.document = this.iframe.contentWindow || this.iframe.contentDocument;\n            this.$container = jQuery('#scif-preview-window');\n        }\n\n        write(content: string) {\n            var parser = document.createElement('a');\n            parser.href = this.iframe.src;\n            \n            var params = this.parseSearch(parser.search);\n            params['shortcode'] = content;\n\n            this.iframe.src = this.buildUrl(parser, params);\n        }\n\n        parseSearch(search: string) {\n            var retval = [];\n            var paramString = search.substring(1);\n            var splitAnd = paramString.split('&');\n            \n            for(var i in splitAnd) {\n                var p = splitAnd[i].split('=');\n                retval[p[0]] = p[1];\n            }\n\n            return retval;\n        }\n\n        buildSearch(params: Array<string>) {\n            var retval = '?';\n            var paramsJoined = new Array<string>();\n\n            for(var i in params) {\n                paramsJoined.push(i + '=' + encodeURIComponent(params[i]));\n            }\n\n            return retval + paramsJoined.join('&');\n        }\n\n        buildUrl(parser, params) {\n            var retval = parser.protocol + '//';\n            retval += parser.hostname;\n            retval += parser.pathname;\n            retval += this.buildSearch(params);\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        public $container: any;\n        private $description: any;\n        public allowContent: boolean;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.$description = jQuery('.shortcode-desc.shortcode-' + this.command);\n            this.allowContent = this.$container.is('[data-scif-allows-content]');\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var field = this.createField(obj);\n                this.fields.push(field);\n            });\n\n            jQuery('.wp-scif-field').on('wpscif:field:update', (e) => {\n                this.$container.trigger('wpscif:fieldset:update');\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n            this.$description.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('active');\n            this.$description.removeClass('active');\n            jQuery('.wp-scif-field').unbind('wpscif:field:update');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                if (field.hasValue()) {\n                    retval.push(field.getOutput());\n                }\n            });\n\n            return retval;\n        }\n\n        public buildShortcode(text='') {\n            var retval = '[' + this.command;\n            var outputArr = this.getValues();\n            \n            if (outputArr.length > 0) {\n                retval += ' ' + outputArr.join(' ');\n            }\n\n            retval += ']';\n\n            if (text) {\n                retval += text;\n            }\n\n            if (this.allowContent) {\n                retval += '[/' + this.command + ']';\n            }\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any; // The WP tinymce editor\ndeclare var tinymce: any; // The tinymce object\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public activeFieldSet: FieldSet;\n        public preview: PreviewWindow;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.activeFieldSet = null;\n            this.editor = tinyMCE.activeEditor;\n            this.preview = new PreviewWindow();\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        buildShortcode() {\n            var enclosingText = null;\n\n            if (this.editor) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            return this.activeFieldSet.buildShortcode(enclosingText);\n        }\n\n        insertShortcode() {\n            var text = this.buildShortcode();\n            send_to_editor( text );\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.activeFieldSet.isValid() ) {\n                this.insertShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            if (this.activeFieldSet) {\n                this.activeFieldSet.destroy();\n                this.activeFieldSet.$container.unbind('wpscif:fieldset:update');\n            }\n\n            var sc = this.$select.val();\n\n            this.activeFieldSet = new FieldSet(sc);\n            this.activeFieldSet.$container.on('wpscif:fieldset:update', () => {\n                this.updatePreview();\n            });\n\n            this.updatePreview();\n        }\n\n        updatePreview() {\n            var shortcode = this.buildShortcode();\n            this.preview.write(shortcode);\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( () => {\n        var shortcodeInterface: WPSCIF.ShortcodeInterface;\n\n        tinymce.on('addeditor', (e) => {\n            if ( ! shortcodeInterface) {\n                shortcodeInterface = new WPSCIF.ShortcodeInterface();   \n            }\n        });\n    });\n}\n"]}