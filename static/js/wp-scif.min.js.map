{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","fieldID","attr","required","data","param","prototype","isValid","id","getValue","jQuery","addClass","removeClass","setDefaultValue","val","hasValue","getOutput","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","options","Array","find","each","idx","obj","push","inArray","prop","DateField","ColorField","CheckboxField","is","FieldSet","command","$container","$description","fields","createField","init","forEach","field","destroy","tagName","getFields","errorCount","getValues","retval","buildShortcode","text","outputArr","length","join","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","activeFieldSet","editor","tinyMCE","activeEditor","click","e","onSubmitBtnClick","change","onSelectChanged","validateForm","parseShortcode","insertShortcode","enclosingText","selection","getContent","send_to_editor","preventDefault","sc","initPreview","document","ready"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n        private fieldID: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.fieldID = this.$field.attr('id');\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            var id = '#' + this.fieldID + '-' + this.param + '-error';\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery(id).addClass('active');\n                return false;\n            }\n            jQuery(id).removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public hasValue() {\n            if (this.getValue()) {\n                return true;\n            }\n\n            return false;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        options: Array<string>;\n\n        constructor($field: any) {\n            super($field)\n            this.options = new Array<string>();\n            this.$field.find('option').each( (idx, obj) => {\n                this.options.push(jQuery(obj).val());\n            });\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else if (jQuery.inArray('', this.options) > -1) {\n                this.$field.val('');\n            } else {\n                this.$field.find('option:selected').prop('selected', false);\n                this.$field.find('option:first').prop('selected', 'selected');\n            }\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        private $description: any;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.$description = jQuery('.shortcode-desc.shortcode-' + this.command);\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(this.createField(obj));\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n            this.$description.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('active');\n            this.$description.removeClass('active');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                if (field.hasValue()) {\n                    retval.push(field.getOutput());\n                }\n            });\n\n            return retval;\n        }\n\n        public buildShortcode(text='') {\n            var retval = '[' + this.command;\n            var outputArr = this.getValues();\n            \n            if (outputArr.length > 0) {\n                retval += ' ' + outputArr.join(' ') + ']';\n            }\n\n            if (text) {\n                retval += text + '[/' + this.command + ']';\n            }\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any;\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public activeFieldSet: FieldSet;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.activeFieldSet = null;\n            this.editor = tinyMCE.activeEditor;\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        validateForm() {\n            return true;\n        }\n\n        parseShortcode() {\n            this.insertShortcode();\n        }\n\n        insertShortcode() {\n            var enclosingText = null;\n\n            if (this.editor) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            var text = this.activeFieldSet.buildShortcode(enclosingText);\n            send_to_editor( text );\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.validateForm() ) {\n                this.insertShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            if (this.activeFieldSet) {\n                this.activeFieldSet.destroy();\n            }\n\n            var sc = this.$select.val();\n\n            this.activeFieldSet = new FieldSet(sc);\n\n            this.initPreview();\n        }\n\n        initPreview() {\n\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( function() {\n        new WPSCIF.ShortcodeInterface();\n    });\n}\n"]}