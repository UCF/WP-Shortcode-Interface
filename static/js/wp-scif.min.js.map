{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","preview.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","this","fieldID","attr","required","data","param","prototype","isValid","id","getValue","jQuery","addClass","removeClass","setDefaultValue","val","hasValue","getOutput","TextField","_super","_this","call","inputMask","__extends","RegExp","test","SelectField","options","Array","find","each","idx","obj","push","inArray","prop","DateField","ColorField","CheckboxField","is","PreviewWindow","iframe","get","document","contentWindow","contentDocument","$container","write","content","parser","createElement","href","src","params","parseSearch","search","buildUrl","retval","paramString","substring","splitAnd","split","i","p","buildSearch","paramsJoined","join","protocol","hostname","pathname","FieldSet","command","$description","allowContent","fields","createField","init","forEach","field","destroy","tagName","getFields","errorCount","getValues","buildShortcode","text","outputArr","length","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","activeFieldSet","editor","tinyMCE","activeEditor","preview","click","e","onSubmitBtnClick","change","onSelectChanged","enclosingText","selection","getContent","insertShortcode","console","log","send_to_editor","preventDefault","sc","initPreview","shortcode","ready","shortcodeInterface","tinymce","on"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n        private fieldID: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.fieldID = this.$field.attr('id');\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n        }\n\n        public isValid(): boolean {\n            var id = '#' + this.fieldID + '-' + this.param + '-error';\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery(id).addClass('active');\n                return false;\n            }\n            jQuery(id).removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public hasValue() {\n            if (this.getValue()) {\n                return true;\n            }\n\n            return false;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        options: Array<string>;\n\n        constructor($field: any) {\n            super($field)\n            this.options = new Array<string>();\n            this.$field.find('option').each( (idx, obj) => {\n                this.options.push(jQuery(obj).val());\n            });\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else if (jQuery.inArray('', this.options) > -1) {\n                this.$field.val('');\n            } else {\n                this.$field.find('option:selected').prop('selected', false);\n                this.$field.find('option:first').prop('selected', 'selected');\n            }\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","namespace WPSCIF {\n    export class PreviewWindow {\n        iframe: any;\n        document: any;\n        $container: any;\n\n        constructor() {\n            this.iframe = <HTMLIFrameElement>jQuery('#scif-preview-iframe').get(0);\n            this.document = this.iframe.contentWindow || this.iframe.contentDocument;\n            this.$container = jQuery('#scif-preview-window');\n        }\n\n        write(content: string) {\n            var parser = document.createElement('a');\n            parser.href = this.iframe.src;\n            \n            var params = this.parseSearch(parser.search);\n            params['shortcode'] = content;\n\n            this.iframe.src = this.buildUrl(parser, params);\n        }\n\n        parseSearch(search: string) {\n            var retval = [];\n            var paramString = search.substring(1);\n            var splitAnd = paramString.split('&');\n            \n            for(var i in splitAnd) {\n                var p = splitAnd[i].split('=');\n                retval[p[0]] = p[1];\n            }\n\n            return retval;\n        }\n\n        buildSearch(params: Array<string>) {\n            var retval = '?';\n            var paramsJoined = new Array<string>();\n\n            for(var i in params) {\n                paramsJoined.push(i + '=' + params[i]);\n            }\n\n            return retval + paramsJoined.join('&');\n        }\n\n        buildUrl(parser, params) {\n            var retval = parser.protocol + '//';\n            retval += parser.hostname;\n            retval += parser.pathname;\n            retval += this.buildSearch(params);\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        private $description: any;\n        public allowContent: boolean;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.$description = jQuery('.shortcode-desc.shortcode-' + this.command);\n            this.allowContent = this.$container.is('[data-scif-allows-content]');\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var $field = jQuery(obj);\n                this.fields.push(this.createField(obj));\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n            this.$description.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('active');\n            this.$description.removeClass('active');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                if (field.hasValue()) {\n                    retval.push(field.getOutput());\n                }\n            });\n\n            return retval;\n        }\n\n        public buildShortcode(text='') {\n            var retval = '[' + this.command;\n            var outputArr = this.getValues();\n            \n            if (outputArr.length > 0) {\n                retval += ' ' + outputArr.join(' ') + ']';\n            }\n\n            if (text) {\n                retval += text;\n            }\n\n            if (this.allowContent) {\n                retval += '[/' + this.command + ']';\n            }\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any; // The WP tinymce editor\ndeclare var tinymce: any; // The tinymce object\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public activeFieldSet: FieldSet;\n        public preview: PreviewWindow;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.activeFieldSet = null;\n            this.editor = tinyMCE.activeEditor;\n            this.preview = new PreviewWindow();\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n        }\n\n        buildShortcode() {\n            var enclosingText = null;\n\n            if (this.editor) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            return this.activeFieldSet.buildShortcode(enclosingText);\n        }\n\n        insertShortcode() {\n            console.log('Called');\n            var text = this.buildShortcode();\n            send_to_editor( text );\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.activeFieldSet.isValid() ) {\n                this.insertShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            console.log('called');\n\n            if (this.activeFieldSet) {\n                this.activeFieldSet.destroy();\n            }\n\n            var sc = this.$select.val();\n\n            this.activeFieldSet = new FieldSet(sc);\n\n            this.initPreview();\n        }\n\n        initPreview() {\n            var shortcode = this.buildShortcode();\n            this.preview.write(shortcode);\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( () => {\n        var shortcodeInterface: WPSCIF.ShortcodeInterface;\n\n        tinymce.on('addeditor', (e) => {\n            if ( ! shortcodeInterface) {\n                shortcodeInterface = new WPSCIF.ShortcodeInterface();   \n            }\n        });\n    });\n}\n"]}