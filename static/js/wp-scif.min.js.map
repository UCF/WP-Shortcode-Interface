{"version":3,"sources":["field.ts","text.ts","select.ts","date.ts","color.ts","checkbox.ts","preview.ts","fieldset.ts","wp-scif.ts"],"names":["WPSCIF","Fields","Field","$field","_this","this","fieldID","attr","required","data","param","on","trigger","prototype","isValid","id","getValue","jQuery","addClass","removeClass","setDefaultValue","val","hasValue","getOutput","TextField","_super","call","inputMask","timer","clearTimeout","setTimeout","__extends","RegExp","test","SelectField","options","Array","find","each","idx","obj","push","inArray","prop","DateField","ColorField","CheckboxField","is","PreviewWindow","iframe","get","document","contentWindow","contentDocument","$container","write","content","parser","createElement","href","src","params","parseSearch","search","buildUrl","retval","paramString","substring","splitAnd","split","i","p","buildSearch","paramsJoined","encodeURIComponent","join","protocol","hostname","pathname","FieldSet","command","$description","allowContent","fields","field","createField","init","forEach","destroy","tagName","getFields","errorCount","getValues","buildShortcode","text","outputArr","length","ShortcodeInterface","$toggle","$interface","$submitBtn","$select","activeFieldSet","editor","tinyMCE","activeEditor","preview","click","e","onSubmitBtnClick","change","onSelectChanged","updatePreview","enclosingText","selection","getContent","insertShortcode","send_to_editor","preventDefault","sc","shortcode","ready","shortcodeInterface","tinymce"],"mappings":"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","file":"wp-scif.min.js","sourcesContent":["namespace WPSCIF.Fields {\n    export abstract class Field {\n        protected $field: any;\n        public required: boolean;\n        public param: string;\n        public default: string;\n        private fieldID: string;\n\n        constructor($field: any) {\n            this.$field = $field;\n            this.fieldID = this.$field.attr('id');\n            this.required = <boolean>this.$field.data('scif-required');\n            if (typeof this.required === \"undefined\") {\n                this.required = false;\n            }\n            this.param = this.$field.data('scif-param');\n            this.default = this.$field.data('scif-default');\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public isValid(): boolean {\n            var id = '#' + this.fieldID + '-' + this.param + '-error';\n            // If required, it must have value\n            if (this.required && ! this.getValue()) {\n                jQuery(id).addClass('active');\n                return false;\n            }\n            jQuery(id).removeClass('active');\n            return true;\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else {\n                this.$field.val('');\n            }\n        }\n\n        public hasValue() {\n            if (this.getValue()) {\n                return true;\n            }\n\n            return false;\n        }\n\n        public getValue() {\n            return this.$field.val();\n        }\n\n        public getOutput() {\n            return this.param + '=\"' + this.getValue() + '\"';\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class TextField extends Field {\n        inputMask: string;\n        timer: any;\n\n        constructor($field: any) {\n            super($field);\n            this.inputMask = this.$field.data('wpscif-valid-regex');\n\n            this.$field.on('input', () => {\n                if (this.timer) {\n                    clearTimeout(this.timer)\n                }\n\n                this.timer = setTimeout( () => {\n                    this.$field.trigger('wpscif:update');\n                }, 300);\n            });\n        }\n\n        public isValid() : boolean {\n            var valid = super.isValid();\n\n            var pattern = new RegExp(this.inputMask);\n            var valid = pattern.test(this.getValue());\n\n            return valid;\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class SelectField extends Field {\n        options: Array<string>;\n\n        constructor($field: any) {\n            super($field)\n            this.options = new Array<string>();\n            this.$field.find('option').each( (idx, obj) => {\n                this.options.push(jQuery(obj).val());\n            });\n\n            this.$field.on('change', () => {\n                this.$field.trigger('wpscif:update');\n            });\n        }\n\n        public setDefaultValue() {\n            if (this.default) {\n                this.$field.val(this.default);\n            } else if (jQuery.inArray('', this.options) > -1) {\n                this.$field.val('');\n            } else {\n                this.$field.find('option:selected').prop('selected', false);\n                this.$field.find('option:first').prop('selected', 'selected');\n            }\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class DateField extends Field {\n        inputMask: string;\n\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class ColorField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n    }\n}\n","namespace WPSCIF.Fields {\n    export class CheckboxField extends Field {\n        constructor($field: any) {\n            super($field);\n        }\n\n        public getValue() {\n            return this.$field.is(':checked');\n        }\n\n        public setDefaultValue() {\n            if (this.default !== null ) {\n                this.$field.prop('checked', true);\n            } else {\n                this.$field.prop('checked', false);\n            }\n        }\n    }\n}\n","namespace WPSCIF {\n    export class PreviewWindow {\n        iframe: any;\n        document: any;\n        $container: any;\n\n        constructor() {\n            this.iframe = <HTMLIFrameElement>jQuery('#scif-preview-iframe').get(0);\n            this.document = this.iframe.contentWindow || this.iframe.contentDocument;\n            this.$container = jQuery('#scif-preview-window');\n        }\n\n        write(content: string) {\n            var parser = document.createElement('a');\n            parser.href = this.iframe.src;\n            \n            var params = this.parseSearch(parser.search);\n            params['shortcode'] = content;\n\n            this.iframe.src = this.buildUrl(parser, params);\n        }\n\n        parseSearch(search: string) {\n            var retval = [];\n            var paramString = search.substring(1);\n            var splitAnd = paramString.split('&');\n            \n            for(var i in splitAnd) {\n                var p = splitAnd[i].split('=');\n                retval[p[0]] = p[1];\n            }\n\n            return retval;\n        }\n\n        buildSearch(params: Array<string>) {\n            var retval = '?';\n            var paramsJoined = new Array<string>();\n\n            for(var i in params) {\n                paramsJoined.push(i + '=' + encodeURIComponent(params[i]));\n            }\n\n            return retval + paramsJoined.join('&');\n        }\n\n        buildUrl(parser, params) {\n            var retval = parser.protocol + '//';\n            retval += parser.hostname;\n            retval += parser.pathname;\n            retval += this.buildSearch(params);\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./fields/fields.d.ts\" />\n\nnamespace WPSCIF {\n    export class FieldSet {\n        private command: string;\n        private fields: Array<Fields.Field>;\n        private $container: any;\n        private $description: any;\n        public allowContent: boolean;\n        \n        constructor(command) {\n            this.command = command;\n            this.$container = jQuery('.shortcode-editor.shortcode-' + command);\n            this.$description = jQuery('.shortcode-desc.shortcode-' + this.command);\n            this.allowContent = this.$container.is('[data-scif-allows-content]');\n            this.fields = new Array<Fields.Field>();\n            var $fields = this.$container.find('.wp-scif-field');\n\n            $fields.each( (idx, obj) => {\n                var field = this.createField(obj);\n                this.fields.push(field);\n            });\n\n            this.init();\n        }\n\n        private init() {\n            this.fields.forEach( (field) => {\n                field.setDefaultValue();\n            });\n\n            this.$container.addClass('active');\n            this.$description.addClass('active');\n        }\n\n        public destroy() {\n            this.$container.removeClass('active');\n            this.$description.removeClass('active');\n        }\n\n        private createField(obj) {\n            var $field = jQuery(obj),\n                tagName = $field.prop('tagName');\n\n            if (tagName === 'SELECT') {\n                return new Fields.SelectField($field);\n            } else if (tagName === 'INPUT') {\n                var type = $field.attr('type');\n                switch(type) {\n                    case 'text':\n                        return new Fields.TextField($field);\n                    case 'date':\n                        return new Fields.DateField($field);\n                    case 'checkbox':\n                        return new Fields.CheckboxField($field);\n                    default:\n                        return new Fields.TextField($field);\n                }\n            }\n        }\n\n        public getFields() {\n            return this.fields;\n        }\n\n        public isValid() {\n            var errorCount: number = 0;\n\n            this.fields.forEach( (field) => {\n                if (!field.isValid) {\n                    errorCount++;\n                }\n            });\n\n            if (errorCount > 0) {\n                return false;\n            }\n\n            return true;\n        }\n\n        public getValues() {\n            var retval = Array<string>();\n\n            this.fields.forEach( (field) => {\n                if (field.hasValue()) {\n                    retval.push(field.getOutput());\n                }\n            });\n\n            return retval;\n        }\n\n        public buildShortcode(text='') {\n            var retval = '[' + this.command;\n            var outputArr = this.getValues();\n            \n            if (outputArr.length > 0) {\n                retval += ' ' + outputArr.join(' ') + ']';\n            }\n\n            if (text) {\n                retval += text;\n            }\n\n            if (this.allowContent) {\n                retval += '[/' + this.command + ']';\n            }\n\n            return retval;\n        }\n    }\n}\n","/// <reference path=\"./wp-scif.d.ts\" />\n\ndeclare var tinyMCE: any; // The WP tinymce editor\ndeclare var tinymce: any; // The tinymce object\ndeclare var send_to_editor: Function;\ndeclare var ajaxurl: string;\n\nnamespace WPSCIF {\n    export class ShortcodeInterface {\n        public $toggle: any;\n        public $interface: any;\n        public $submitBtn: any;\n        public $select: any;\n        public activeFieldSet: FieldSet;\n        public preview: PreviewWindow;\n        public editor: any;\n\n        constructor() {\n            this.$toggle = jQuery('#add-shortcode');\n            this.$interface = jQuery('#wp-scif-form-inner');\n            this.$submitBtn = this.$interface.find('#wp-scif-submit');\n            this.$select = this.$interface.find('#wp-scif-select');\n            this.activeFieldSet = null;\n            this.editor = tinyMCE.activeEditor;\n            this.preview = new PreviewWindow();\n\n            this.$submitBtn.click( (e) => { this.onSubmitBtnClick(e) });\n            this.$select.change( (e) => { this.onSelectChanged(e) });\n\n            jQuery('.wp-scif-field').on( 'wpscif:update', (e) => {\n                this.updatePreview();\n            });\n        }\n\n        buildShortcode() {\n            var enclosingText = null;\n\n            if (this.editor) {\n                enclosingText = this.editor.selection.getContent();\n            }\n\n            return this.activeFieldSet.buildShortcode(enclosingText);\n        }\n\n        insertShortcode() {\n            var text = this.buildShortcode();\n            send_to_editor( text );\n        }\n\n        onSubmitBtnClick(e) {\n            e.preventDefault();\n\n            if ( this.activeFieldSet.isValid() ) {\n                this.insertShortcode();\n            }\n        }\n\n        onSelectChanged(e) {\n            if (this.activeFieldSet) {\n                this.activeFieldSet.destroy();\n            }\n\n            var sc = this.$select.val();\n\n            this.activeFieldSet = new FieldSet(sc);\n\n            this.updatePreview();\n        }\n\n        updatePreview() {\n            var shortcode = this.buildShortcode();\n            this.preview.write(shortcode);\n        }\n    }\n}\n\nif ( typeof jQuery !== 'undefined' ) {\n    jQuery(document).ready( () => {\n        var shortcodeInterface: WPSCIF.ShortcodeInterface;\n\n        tinymce.on('addeditor', (e) => {\n            if ( ! shortcodeInterface) {\n                shortcodeInterface = new WPSCIF.ShortcodeInterface();   \n            }\n        });\n    });\n}\n"]}